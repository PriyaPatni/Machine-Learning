# -*- coding: utf-8 -*-
"""Perceptron.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lmtA9KFPLPns-UMhJCCY23g4bSUiCrmA
"""

import numpy as np

class perceptron(object):
    def __init__(self,size,lr=1,epochs=100):
        self.w=np.zeros(size+1)
        self.lr=lr
        self.epochs=epochs
    def fit(self,X,Y):
        for i in range(self.epochs):
            for j in range(Y.shape[0]):
                x=np.insert(X[j],0,1)
                y=self.predict(x)
                e=Y[j]-y
                self.w=self.w+self.lr*e*x
    def predict(self,x):
        z=self.w.T.dot(x)
        a=self.act(z)
        return a
    def act(self,z):
        if z>=0:
            return 1
        return 0

X=np.array([[0,0],[0,1],[1,0],[1,1]])
Y=np.array([0,0,0,1])

obj=perceptron(size=2)
obj.fit(X,Y)
print(obj.w)
